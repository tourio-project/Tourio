import 'dart:async';
import 'package:flutter/material.dart';
import 'package:flutter/services.dart';

void main() => runApp(const TourioApp());

class TourioApp extends StatelessWidget {
  const TourioApp({super.key});
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Tourio',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        useMaterial3: false,
        primaryColor: AppColors.ink,
        scaffoldBackgroundColor: Colors.white,
        fontFamily: 'Arial',
        elevatedButtonTheme: ElevatedButtonThemeData(
          style: ElevatedButton.styleFrom(
            backgroundColor: AppColors.ink, // black primary button
            foregroundColor: Colors.white,
            shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
            minimumSize: const Size(180, 42),
          ),
        ),
      ),
      home: const IntroPage(),
    );
  }
}

/* ---------- PALETTE ---------- */
class AppColors {
  static const cream = Color(0xFFFFF3E3);
  static const sand  = Color(0xFFEBC99B);
  static const ink   = Color(0xFF161110); // black
}

/* ---------- SHARED WIDGETS ---------- */

// (4a) Hint-only decoration (no floating labels)
InputDecoration fieldHint(String hint) => InputDecoration(
      hintText: hint,
      floatingLabelBehavior: FloatingLabelBehavior.never,
      hintStyle: const TextStyle(color: Colors.black54),
      filled: true,
      fillColor: Colors.white.withOpacity(0.88),
      border: OutlineInputBorder(
        borderRadius: BorderRadius.circular(12),
        borderSide: BorderSide.none,
      ),
      contentPadding: const EdgeInsets.symmetric(horizontal: 14, vertical: 12),
    );

class SlideshowBackground extends StatelessWidget {
  const SlideshowBackground({super.key, required this.images, required this.index});
  final List<String> images;
  final int index;

  @override
  Widget build(BuildContext context) {
    return AnimatedSwitcher(
      duration: const Duration(milliseconds: 900),
      child: SizedBox.expand(
        key: ValueKey(images[index]),
        child: Image.asset(
          images[index],
          fit: BoxFit.cover,
          // resilience if an asset path is wrong
          errorBuilder: (_, __, ___) => const ColoredBox(color: Colors.black),
        ),
      ),
    );
  }
}

/* ---------- INTRO ---------- */
class IntroPage extends StatefulWidget {
  const IntroPage({super.key});
  @override
  State<IntroPage> createState() => _IntroPageState();
}

class _IntroPageState extends State<IntroPage> {
  final _images = const [
    'assets/images/petra_image.jpg',
    'assets/images/petra_lights.jpg',
    'assets/images/wadi_rum.jpg',
    'assets/images/deadsea.jpg',
    'assets/images/nature_pic.jpg',
    'assets/images/downtown_pic.jpg',
    'assets/images/webdeh_pic.jpg',
    'assets/images/sad_il_malek_talal.jpg',
    'assets/images/stairtojabalamman.jpg',
  ];
  int _index = 0;
  Timer? _timer;

  @override
  void initState() {
    super.initState();
    _timer = Timer.periodic(const Duration(seconds: 4),
        (_) => setState(() => _index = (_index + 1) % _images.length));
  }

  @override
  void dispose() {
    _timer?.cancel();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return GestureDetector(
      onTap: () => Navigator.push(context, MaterialPageRoute(builder: (_) => const LoginPage())),
      child: Scaffold(
        body: Stack(fit: StackFit.expand, children: [
          SlideshowBackground(images: _images, index: _index),
          Container(color: Colors.black.withOpacity(0.30)),
          Center(
            child: Padding(
              padding: const EdgeInsets.symmetric(horizontal: 24),
              child: Image.asset('assets/images/logo.jpg', fit: BoxFit.contain),
            ),
          ),
        ]),
      ),
    );
  }
}

/* ---------- LOGIN ---------- */
class LoginPage extends StatefulWidget {
  const LoginPage({super.key});
  @override
  State<LoginPage> createState() => _LoginPageState();
}

class _LoginPageState extends State<LoginPage> {
  final _images = const [
    'assets/images/petra_image.jpg',
    'assets/images/petra_lights.jpg',
    'assets/images/wadi_rum.jpg',
    'assets/images/deadsea.jpg',
    'assets/images/nature_pic.jpg',
    'assets/images/downtown_pic.jpg',
    'assets/images/webdeh_pic.jpg',
    'assets/images/sad_il_malek_talal.jpg',
    'assets/images/stairtojabalamman.jpg',
  ];
  int _index = 0;
  Timer? _timer;

  final _email = TextEditingController();
  final _password = TextEditingController();

  @override
  void initState() {
    super.initState();
    _timer = Timer.periodic(const Duration(seconds: 4),
        (_) => setState(() => _index = (_index + 1) % _images.length));
  }

  @override
  void dispose() {
    _timer?.cancel();
    _email.dispose();
    _password.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Stack(children: [
        SlideshowBackground(images: _images, index: _index),
        Container(color: Colors.black.withOpacity(0.32)),
        // (6) Back arrow
        SafeArea(
          child: Align(
            alignment: Alignment.topLeft,
            child: IconButton(
              icon: const Icon(Icons.arrow_back_ios_new, color: Colors.white),
              onPressed: () => Navigator.pop(context),
            ),
          ),
        ),
        SafeArea(
          child: Center(
            child: SingleChildScrollView(
              padding: const EdgeInsets.symmetric(horizontal: 28, vertical: 16),
              child: Column(mainAxisSize: MainAxisSize.min, children: [
                Padding(
                  padding: const EdgeInsets.only(bottom: 24),
                  child: Image.asset('assets/images/logo.jpg', height: 90),
                ),
                // (4b) hint-only fields (no jump)
                TextField(
                  controller: _email,
                  decoration: fieldHint('Username or Email'),
                  keyboardType: TextInputType.emailAddress,
                  textInputAction: TextInputAction.next,
                  autocorrect: false,
                ),
                const SizedBox(height: 14),
                TextField(
                  controller: _password,
                  decoration: fieldHint('Password'),
                  obscureText: true,
                  textInputAction: TextInputAction.done,
                  autocorrect: false,
                ),
                const SizedBox(height: 18),
                // (2) Log in -> Home (pushReplacement)
                ElevatedButton(
                  onPressed: () {
                    Navigator.of(context).pushReplacement(
                      MaterialPageRoute(builder: (_) => const HomePage()),
                    );
                  },
                  child: const Text('LOG IN'),
                ),
                const SizedBox(height: 10),
                OutlinedButton(
                  style: OutlinedButton.styleFrom(
                    side: BorderSide(color: Colors.white.withOpacity(0.85)),
                    foregroundColor: Colors.white,
                    backgroundColor: Colors.white.withOpacity(0.18),
                    shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
                    minimumSize: const Size(180, 42),
                  ),
                  onPressed: () => Navigator.push(
                    context,
                    MaterialPageRoute(builder: (_) => const SignupPage()),
                  ),
                  child: const Text('SIGN UP'),
                ),
              ]),
            ),
          ),
        ),
      ]),
    );
  }
}

/* ---------- SIGNUP ---------- */
class SignupPage extends StatefulWidget {
  const SignupPage({super.key});
  @override
  State<SignupPage> createState() => _SignupPageState();
}

class _SignupPageState extends State<SignupPage> {
  final _images = const [
    'assets/images/petra_image.jpg',
    'assets/images/petra_lights.jpg',
    'assets/images/wadi_rum.jpg',
    'assets/images/deadsea.jpg',
    'assets/images/nature_pic.jpg',
    'assets/images/downtown_pic.jpg',
    'assets/images/webdeh_pic.jpg',
    'assets/images/sad_il_malek_talal.jpg',
    'assets/images/stairtojabalamman.jpg',
  ];
  int _index = 0;
  Timer? _timer;

  final _username = TextEditingController();
  final _email = TextEditingController();
  final _password = TextEditingController();
  final _age = TextEditingController(); // (5) Age

  @override
  void initState() {
    super.initState();
    _timer = Timer.periodic(const Duration(seconds: 4),
        (_) => setState(() => _index = (_index + 1) % _images.length));
  }

  @override
  void dispose() {
    _timer?.cancel();
    _username.dispose();
    _email.dispose();
    _password.dispose();
    _age.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Stack(children: [
        SlideshowBackground(images: _images, index: _index),
        Container(color: Colors.black.withOpacity(0.32)),
        // (6) Back arrow
        SafeArea(
          child: Align(
            alignment: Alignment.topLeft,
            child: IconButton(
              icon: const Icon(Icons.arrow_back_ios_new, color: Colors.white),
              onPressed: () => Navigator.pop(context),
            ),
          ),
        ),
        SafeArea(
          child: Center(
            child: SingleChildScrollView(
              padding: const EdgeInsets.symmetric(horizontal: 28, vertical: 16),
              child: Column(mainAxisSize: MainAxisSize.min, children: [
                Padding(
                  padding: const EdgeInsets.only(bottom: 24),
                  child: Image.asset('assets/images/logo.jpg', height: 90),
                ),
                TextField(
                  controller: _username,
                  decoration: fieldHint('Username'),
                  textInputAction: TextInputAction.next,
                  autocorrect: false,
                ),
                const SizedBox(height: 14),
                TextField(
                  controller: _email,
                  decoration: fieldHint('Email'),
                  keyboardType: TextInputType.emailAddress,
                  textInputAction: TextInputAction.next,
                  autocorrect: false,
                ),
                const SizedBox(height: 14),
                TextField(
                  controller: _password,
                  decoration: fieldHint('Password'),
                  obscureText: true,
                  textInputAction: TextInputAction.next,
                  autocorrect: false,
                ),
                const SizedBox(height: 14),
                // (5) Age field (digits only, no floating labels)
                TextField(
                  controller: _age,
                  decoration: fieldHint('Age'),
                  keyboardType: TextInputType.number,
                  inputFormatters: <TextInputFormatter>[
                    FilteringTextInputFormatter.digitsOnly,
                    LengthLimitingTextInputFormatter(3),
                  ],
                  textInputAction: TextInputAction.done,
                ),
                const SizedBox(height: 18),
                // (3) Sign up -> Home (pushReplacement)
                ElevatedButton(
                  onPressed: () {
                    Navigator.of(context).pushReplacement(
                      MaterialPageRoute(builder: (_) => const HomePage()),
                    );
                  },
                  child: const Text('SIGN UP'),
                ),
              ]),
            ),
          ),
        ),
      ]),
    );
  }
}

/* ---------- HOME (7: buttons functional) ---------- */
class HomePage extends StatefulWidget {
  const HomePage({super.key});
  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  int _tab = 0;

  @override
  Widget build(BuildContext context) {
    final pages = [
      const _HomeFeed(),
      const _ExplorePage(),
      const _ItineraryPage(),
      const _SavedPage(),
      const _ProfilePage(),
    ];

    return Scaffold(
      appBar: AppBar(
        backgroundColor: AppColors.ink,
        elevation: 0,
        title: Row(children: [
          Image.asset('assets/images/logo.jpg', height: 28),
          const SizedBox(width: 8),
          const Text('Tourio', style: TextStyle(color: Colors.white)),
        ]),
        actions: [
          IconButton(
            icon: const Icon(Icons.notifications_none, color: Colors.white),
            onPressed: () => _toast(context, 'Notifications'),
          )
        ],
      ),
      body: pages[_tab],
      bottomNavigationBar: BottomNavigationBar(
        currentIndex: _tab,
        onTap: (i) => setState(() => _tab = i),
        selectedItemColor: AppColors.ink,
        unselectedItemColor: Colors.black45,
        items: const [
          BottomNavigationBarItem(icon: Icon(Icons.home_outlined), label: 'Home'),
          BottomNavigationBarItem(icon: Icon(Icons.travel_explore), label: 'Explore'),
          BottomNavigationBarItem(icon: Icon(Icons.event_note), label: 'Plans'),
          BottomNavigationBarItem(icon: Icon(Icons.bookmark_border), label: 'Saved'),
          BottomNavigationBarItem(icon: Icon(Icons.person_outline), label: 'Profile'),
        ],
      ),
    );
  }
}

class _HomeFeed extends StatelessWidget {
  const _HomeFeed();

  @override
  Widget build(BuildContext context) {
    return ListView(
      padding: const EdgeInsets.fromLTRB(16, 16, 16, 24),
      children: [
        const Text('Discover Jordan with intelligence',
            style: TextStyle(fontSize: 22, fontWeight: FontWeight.w700)),
        const SizedBox(height: 8),
        const Text('Start planning your trip with AI', style: TextStyle(color: Colors.black54)),
        const SizedBox(height: 16),

        _SectionTitle('Happening Now'),
        const SizedBox(height: 10),
        GridView.count(
          crossAxisCount: 4,
          shrinkWrap: true,
          physics: const NeverScrollableScrollPhysics(),
          crossAxisSpacing: 10,
          mainAxisSpacing: 10,
          children: [
            _HomeIconButton(icon: Icons.nightlight_round, label: 'Night', onTap: () => _open(context, 'Night at Petra')),
            _HomeIconButton(icon: Icons.sunny, label: 'Desert', onTap: () => _open(context, 'Desert Sunrise')),
            _HomeIconButton(icon: Icons.directions_boat, label: 'Dead Sea', onTap: () => _open(context, 'Dead Sea')),
            _HomeIconButton(icon: Icons.terrain, label: 'Wadi Rum', onTap: () => _open(context, 'Wadi Rum')),
          ],
        ),
        const SizedBox(height: 20),

        _SectionTitle('Explore the culture'),
        const SizedBox(height: 10),
        Wrap(
          spacing: 10,
          runSpacing: 10,
          children: [
            _ChipButton('Cuisine', () => _open(context, 'Cuisine')),
            _ChipButton('Bedouin', () => _open(context, 'Bedouin')),
            _ChipButton('Ruins', () => _open(context, 'Ancient Ruins')),
            _ChipButton('Museums', () => _open(context, 'Museums')),
            _ChipButton('Crafts', () => _open(context, 'Crafts')),
            _ChipButton('Castles', () => _open(context, 'Castles')),
          ],
        ),
        const SizedBox(height: 24),

        Align(
          alignment: Alignment.centerLeft,
          child: ElevatedButton.icon(
            icon: const Icon(Icons.auto_awesome),
            label: const Text('Plan with AI'),
            onPressed: () => _open(context, 'AI Trip Planner'),
          ),
        ),
      ],
    );
  }

  static void _open(BuildContext context, String title) {
    Navigator.push(context, MaterialPageRoute(builder: (_) => DetailPage(title: title)));
  }
}

class _ExplorePage extends StatelessWidget {
  const _ExplorePage();
  @override
  Widget build(BuildContext context) {
    return Center(
      child: ElevatedButton(
        onPressed: () => _toast(context, 'Explore map opened'),
        child: const Text('Open Map'),
      ),
    );
  }
}

class _ItineraryPage extends StatelessWidget {
  const _ItineraryPage();
  @override
  Widget build(BuildContext context) {
    return Center(
      child: ElevatedButton(
        onPressed: () => _toast(context, 'Create itinerary'),
        child: const Text('Create Itinerary'),
      ),
    );
  }
}

class _SavedPage extends StatelessWidget {
  const _SavedPage();
  @override
  Widget build(BuildContext context) {
    return Center(
      child: ElevatedButton(
        onPressed: () => _toast(context, 'Saved places'),
        child: const Text('View Saved'),
      ),
    );
  }
}

class _ProfilePage extends StatelessWidget {
  const _ProfilePage();
  @override
  Widget build(BuildContext context) {
    return Center(
      child: ElevatedButton(
        onPressed: () => _toast(context, 'Edit profile'),
        child: const Text('Edit Profile'),
      ),
    );
  }
}

/* ---------- REUSABLE BITS ---------- */
class _SectionTitle extends StatelessWidget {
  const _SectionTitle(this.text);
  final String text;
  @override
  Widget build(BuildContext context) {
    return Text(text, style: const TextStyle(fontSize: 16, fontWeight: FontWeight.w700));
  }
}

class _HomeIconButton extends StatelessWidget {
  const _HomeIconButton({required this.icon, required this.label, required this.onTap});
  final IconData icon;
  final String label;
  final VoidCallback onTap;

  @override
  Widget build(BuildContext context) {
    return Material(
      color: AppColors.cream,
      borderRadius: BorderRadius.circular(12),
      child: InkWell(
        onTap: onTap,
        borderRadius: BorderRadius.circular(12),
        child: Padding(
          padding: const EdgeInsets.symmetric(vertical: 10),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Icon(icon, color: AppColors.ink),
              const SizedBox(height: 6),
              Text(label, style: const TextStyle(fontSize: 11)),
            ],
          ),
        ),
      ),
    );
  }
}

class _ChipButton extends StatelessWidget {
  const _ChipButton(this.label, this.onTap);
  final String label;
  final VoidCallback onTap;
  @override
  Widget build(BuildContext context) {
    return ActionChip(
      label: Text(label),
      backgroundColor: AppColors.sand,
      onPressed: onTap,
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),
      labelStyle: const TextStyle(color: Colors.black87),
    );
  }
}

/* ---------- DETAILS PAGE ---------- */
class DetailPage extends StatelessWidget {
  const DetailPage({super.key, required this.title});
  final String title;
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(backgroundColor: AppColors.ink, title: Text(title, style: const TextStyle(color: Colors.white))),
      body: Center(child: Text('Coming soon: $title', style: const TextStyle(fontSize: 20))),
    );
  }
}

/* ---------- HELPERS ---------- */
void _toast(BuildContext context, String msg) {
  ScaffoldMessenger.of(context).showSnackBar(
    SnackBar(content: Text(msg), duration: const Duration(milliseconds: 900)),
  );
}
